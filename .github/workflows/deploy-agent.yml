name: Prefect Agent Deployment

on:
  workflow_dispatch:
    inputs:
      artifact_repository:
        description: Artifact Registry Repository
        required: true
        default: 'prefect-agent'
        type: string
      image_name:
        description: Image name in Artifact Registry Repository
        required: true
        default: 'agent'
        type: string
      region:
        description: GCP region
        required: true
        default: 'us-central1'
        type: string
      zone:
        description: Zone in the selected GCP region
        required: true
        default: 'us-central1-f'
        type: string
      machine_type:
        description: GCP Compute Engine instance type
        required: true
        default: 'e2-micro'
        type: string
      machine_name:
        description: Unique name for your GCP Compute Engine instance
        required: true
        default: 'prefect-agent-cloud-vm'
        type: string

jobs:
  build-and-deploy-container:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: pip install poetry
      - name: Generate requirements.txt
        run: poetry export -f requirements.txt -o requirements.txt
      - name: Build and deploy actual container
        id: deploy-container-to-compute-engine
        uses: ./.github/actions/deploy-container-to-compute-engine
        with:
          prefect_api_key: ${{ secrets.PREFECT_API_KEY }}
          prefect_api_url: ${{ secrets.PREFECT_API_URL }}
          artifact_repository: ${{ github.event.inputs.artifact_repository }}
          region: ${{ github.event.inputs.region }}
          gcp_credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          zone: ${{ github.event.inputs.zone }}
          machine_type: ${{ github.event.inputs.machine_type }}
          machine_name: ${{ github.event.inputs.machine_name }}
          image_name: ${{ github.event.inputs.image_name }}
          dockerfile_path: Dockerfile_Agent